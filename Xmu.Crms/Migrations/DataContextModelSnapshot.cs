// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using Xmu.Crms.Shared.Models;

namespace Xmu.Crms.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("MySql:ValueGenerationStrategy", MySqlValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125");

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Attendance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AttendanceSatus");

                    b.Property<int?>("ClassInfoId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("ClassInfoId");

                    b.HasIndex("StudentId");

                    b.ToTable("Attendence");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.ClassInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClassTime");

                    b.Property<int?>("CourseId");

                    b.Property<string>("Description");

                    b.Property<int>("FivePointPercentage");

                    b.Property<int>("FourPointPercentage");

                    b.Property<string>("Name");

                    b.Property<int>("PresentationPercentage");

                    b.Property<int>("ReportPercentage");

                    b.Property<string>("Site");

                    b.Property<int>("ThreePointPercentage");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("ClassInfo");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndDate");

                    b.Property<int>("FivePointPercentage");

                    b.Property<int>("FourPointPercentage");

                    b.Property<string>("Name");

                    b.Property<int>("PresentationPercentage");

                    b.Property<int>("ReportPercentage");

                    b.Property<DateTime>("StartDate");

                    b.Property<int?>("TeacherId");

                    b.Property<int>("ThreePointPercentage");

                    b.HasKey("Id");

                    b.HasIndex("TeacherId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.CourseSelection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassInfoId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("ClassInfoId");

                    b.HasIndex("StudentId");

                    b.ToTable("CourseSelection");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.FixGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassInfoId");

                    b.Property<int?>("LeaderId");

                    b.HasKey("Id");

                    b.HasIndex("ClassInfoId");

                    b.HasIndex("LeaderId");

                    b.ToTable("FixGroup");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.FixGroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FixGroupId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("FixGroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("FixGroupMember");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassInfoId");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<int?>("SeminarId");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("ClassInfoId");

                    b.HasIndex("SeminarId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.Property<string>("Province");

                    b.HasKey("Id");

                    b.ToTable("School");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Seminar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CourseId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("IsFixed");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Seminar");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClassInfoId");

                    b.Property<int>("FinalGrade");

                    b.Property<int?>("LeaderId");

                    b.Property<int>("PresentationGrade");

                    b.Property<string>("Report");

                    b.Property<int>("ReportGrade");

                    b.Property<int?>("SeminarId");

                    b.HasKey("Id");

                    b.HasIndex("ClassInfoId");

                    b.HasIndex("LeaderId");

                    b.HasIndex("SeminarId");

                    b.ToTable("SeminarGroup");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroupMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("SeminarGroupId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("SeminarGroupId");

                    b.HasIndex("StudentId");

                    b.ToTable("SeminarGroupMember");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroupTopic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PresentationGrade");

                    b.Property<int?>("SeminarGroupId");

                    b.Property<int?>("TopicId");

                    b.HasKey("Id");

                    b.HasIndex("SeminarGroupId");

                    b.HasIndex("TopicId");

                    b.ToTable("SeminarGroupTopic");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.StudentScoreGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Grade");

                    b.Property<int?>("SeminarGroupTopicId");

                    b.Property<int?>("StudentId");

                    b.HasKey("Id");

                    b.HasIndex("SeminarGroupTopicId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentScoreGroup");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("GroupNumberLimit");

                    b.Property<int>("GroupStudentLimit");

                    b.Property<string>("Name");

                    b.Property<int?>("SeminarId");

                    b.HasKey("Id");

                    b.HasIndex("SeminarId");

                    b.ToTable("Topic");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.UserInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Avatar");

                    b.Property<int>("Education");

                    b.Property<string>("Email");

                    b.Property<int>("Gender");

                    b.Property<string>("Name");

                    b.Property<string>("Number");

                    b.Property<string>("Password");

                    b.Property<string>("Phone");

                    b.Property<int?>("SchoolId");

                    b.Property<int>("Title");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("SchoolId");

                    b.ToTable("UserInfo");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Attendance", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.ClassInfo", "ClassInfo")
                        .WithMany()
                        .HasForeignKey("ClassInfoId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.ClassInfo", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Course", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.CourseSelection", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.ClassInfo", "ClassInfo")
                        .WithMany()
                        .HasForeignKey("ClassInfoId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.FixGroup", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.ClassInfo", "ClassInfo")
                        .WithMany()
                        .HasForeignKey("ClassInfoId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.FixGroupMember", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.FixGroup", "FixGroup")
                        .WithMany()
                        .HasForeignKey("FixGroupId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Location", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.ClassInfo", "ClassInfo")
                        .WithMany()
                        .HasForeignKey("ClassInfoId");

                    b.HasOne("Xmu.Crms.Shared.Models.Seminar", "Seminar")
                        .WithMany()
                        .HasForeignKey("SeminarId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Seminar", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroup", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.ClassInfo", "ClassInfo")
                        .WithMany()
                        .HasForeignKey("ClassInfoId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId");

                    b.HasOne("Xmu.Crms.Shared.Models.Seminar", "Seminar")
                        .WithMany()
                        .HasForeignKey("SeminarId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroupMember", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.SeminarGroup", "SeminarGroup")
                        .WithMany()
                        .HasForeignKey("SeminarGroupId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.SeminarGroupTopic", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.SeminarGroup", "SeminarGroup")
                        .WithMany()
                        .HasForeignKey("SeminarGroupId");

                    b.HasOne("Xmu.Crms.Shared.Models.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.StudentScoreGroup", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.SeminarGroupTopic", "SeminarGroupTopic")
                        .WithMany()
                        .HasForeignKey("SeminarGroupTopicId");

                    b.HasOne("Xmu.Crms.Shared.Models.UserInfo", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.Topic", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.Seminar", "Seminar")
                        .WithMany()
                        .HasForeignKey("SeminarId");
                });

            modelBuilder.Entity("Xmu.Crms.Shared.Models.UserInfo", b =>
                {
                    b.HasOne("Xmu.Crms.Shared.Models.School", "School")
                        .WithMany()
                        .HasForeignKey("SchoolId");
                });
#pragma warning restore 612, 618
        }
    }
}
